[
  {
    "ContainingType": "UWS_BACK.Controllers.AuthenticationController",
    "Method": "GetAuthentication",
    "RelativePath": "api/Authentication",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.AuthenticationController",
    "Method": "Registration",
    "RelativePath": "api/Authentication",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "model",
        "Type": "UWS_BACK.Models.AuthenticationModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.AuthenticationController",
    "Method": "CheckPhoneNumber",
    "RelativePath": "api/Authentication/check-phone/{phoneNumber}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "phoneNumber",
        "Type": "System.String",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.AuthenticationController",
    "Method": "Login",
    "RelativePath": "api/Authentication/login",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "loginRequest",
        "Type": "UWS_BACK.Models.AuthenticationModel",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.DriverController",
    "Method": "CreateOrUpdateDriver",
    "RelativePath": "api/Driver",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "driverDTO",
        "Type": "UWS_BACK.DTO.DriverDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.DriverController",
    "Method": "GetAllDrivers",
    "RelativePath": "api/Driver",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.DriverController",
    "Method": "GetDriver",
    "RelativePath": "api/Driver/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.DriverController",
    "Method": "UpdateDriver",
    "RelativePath": "api/Driver/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "driverDTO",
        "Type": "UWS_BACK.DTO.DriverDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.DriverController",
    "Method": "DeleteDriver",
    "RelativePath": "api/Driver/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.FeedbackController",
    "Method": "Feedbacks",
    "RelativePath": "api/Feedback",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newFeedback",
        "Type": "UWS_BACK.DTO.FeedbackDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.FeedbackController",
    "Method": "UpdateFeedback",
    "RelativePath": "api/Feedback/{feedbackId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedbackId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedFeedback",
        "Type": "UWS_BACK.DTO.FeedbackDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.FeedbackController",
    "Method": "GetFeedbackById",
    "RelativePath": "api/Feedback/{reportId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "feedBackId",
        "Type": "System.Int32",
        "IsRequired": false
      },
      {
        "Name": "reportId",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.FeedbackController",
    "Method": "GetAllFeedbacks",
    "RelativePath": "api/Feedback/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.FeedbackController",
    "Method": "GetUserFeedbacks",
    "RelativePath": "api/Feedback/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.ProfileController",
    "Method": "UpdateProfile",
    "RelativePath": "api/Profile",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "profileData",
        "Type": "UWS_BACK.Controllers.ProfileController\u002BProfileUpdateRequest",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.ProfileController",
    "Method": "GetAllProfiles",
    "RelativePath": "api/Profile",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.ProfileController",
    "Method": "GetProfile",
    "RelativePath": "api/Profile/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.PublicReportController",
    "Method": "PublicReports",
    "RelativePath": "api/PublicReport",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newReport",
        "Type": "UWS_BACK.DTO.PublicReportDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.PublicReportController",
    "Method": "GetReportById",
    "RelativePath": "api/PublicReport/{reportId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.PublicReportController",
    "Method": "UpdateReport",
    "RelativePath": "api/PublicReport/{reportId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "reportId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedReport",
        "Type": "UWS_BACK.DTO.PublicReportDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.PublicReportController",
    "Method": "GetAllReports",
    "RelativePath": "api/PublicReport/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.PublicReportController",
    "Method": "GetUserReports",
    "RelativePath": "api/PublicReport/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "Routes",
    "RelativePath": "api/Route",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newRoute",
        "Type": "UWS_BACK.DTO.RouteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "UpdateRouteName",
    "RelativePath": "api/Route/{routeId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "routeId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedRoute",
        "Type": "UWS_BACK.DTO.RouteDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "DeleteRoute",
    "RelativePath": "api/Route/{routeId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "routeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "GetAllRoutes",
    "RelativePath": "api/Route/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "GetLocationsOfRoute",
    "RelativePath": "api/Route/alllocations/{routeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "routeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "GetAllRoutesWithLocations",
    "RelativePath": "api/Route/allrouteslocations",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "Location",
    "RelativePath": "api/Route/location/{routeId}",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newLocation",
        "Type": "UWS_BACK.DTO.LocationDTO",
        "IsRequired": true
      },
      {
        "Name": "routeId",
        "Type": "",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "GetLocationsWithDistance",
    "RelativePath": "api/Route/locationswithdistance/{routeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "routeId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "latitude",
        "Type": "System.Double",
        "IsRequired": false
      },
      {
        "Name": "longitude",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "GetMainRoutes",
    "RelativePath": "api/Route/mainroutes",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.RouteController",
    "Method": "GetNearestRoute",
    "RelativePath": "api/Route/nearestroute",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "latitude",
        "Type": "System.Double",
        "IsRequired": false
      },
      {
        "Name": "longitude",
        "Type": "System.Double",
        "IsRequired": false
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.ScheduleController",
    "Method": "CreateOrUpdateSchedule",
    "RelativePath": "api/Schedule/create",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newSchedule",
        "Type": "UWS_BACK.DTO.ScheduleDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.ScheduleController",
    "Method": "GetScheduleByRouteId",
    "RelativePath": "api/Schedule/route/{routeId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "routeId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.SpecialPickupController",
    "Method": "SpecialPickup",
    "RelativePath": "api/SpecialPickup",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "newPickup",
        "Type": "UWS_BACK.DTO.SpecialPickupDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.SpecialPickupController",
    "Method": "GetPickupById",
    "RelativePath": "api/SpecialPickup/{pickupId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pickupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.SpecialPickupController",
    "Method": "UpdatePickup",
    "RelativePath": "api/SpecialPickup/{pickupId}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pickupId",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "updatedPickup",
        "Type": "UWS_BACK.DTO.SpecialPickupDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.SpecialPickupController",
    "Method": "DeletePickup",
    "RelativePath": "api/SpecialPickup/{pickupId}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "pickupId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.SpecialPickupController",
    "Method": "GetAllPickups",
    "RelativePath": "api/SpecialPickup/all",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.SpecialPickupController",
    "Method": "GetUserPickups",
    "RelativePath": "api/SpecialPickup/user/{userId}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "userId",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.TruckController",
    "Method": "CreateOrUpdateTruck",
    "RelativePath": "api/Truck",
    "HttpMethod": "POST",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "truckDTO",
        "Type": "UWS_BACK.DTO.TruckDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.TruckController",
    "Method": "GetAllTrucks",
    "RelativePath": "api/Truck",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.TruckController",
    "Method": "GetTruck",
    "RelativePath": "api/Truck/{id}",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.TruckController",
    "Method": "UpdateTruck",
    "RelativePath": "api/Truck/{id}",
    "HttpMethod": "PUT",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      },
      {
        "Name": "truckDTO",
        "Type": "UWS_BACK.DTO.TruckDTO",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.TruckController",
    "Method": "DeleteTruck",
    "RelativePath": "api/Truck/{id}",
    "HttpMethod": "DELETE",
    "IsController": true,
    "Order": 0,
    "Parameters": [
      {
        "Name": "id",
        "Type": "System.Int32",
        "IsRequired": true
      }
    ],
    "ReturnTypes": []
  },
  {
    "ContainingType": "UWS_BACK.Controllers.WeatherForecastController",
    "Method": "Get",
    "RelativePath": "WeatherForecast",
    "HttpMethod": "GET",
    "IsController": true,
    "Order": 0,
    "Parameters": [],
    "ReturnTypes": [
      {
        "Type": "System.Collections.Generic.IEnumerable\u00601[[UWS_BACK.WeatherForecast, UWS-BACK, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]",
        "MediaTypes": [
          "text/plain",
          "application/json",
          "text/json"
        ],
        "StatusCode": 200
      }
    ],
    "EndpointName": "GetWeatherForecast"
  }
]